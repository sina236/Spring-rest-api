{"version":3,"sources":["component/layout/Landing.js","SetJwtToken.js","action.js","component/layout/UserManagment/Register.js","component/layout/UserManagment/Login.js","component/Item.js","component/Project/Button.js","component/Dashboard.js","Backdrop.js","Modal/Modal.js","component/Project/AddProject.js","component/Project/UpdateProject.js","component/ProjectBoard/ProjectTask/ProjectTask.js","component/ProjectBoard/Backlog.js","component/ProjectBoard/ProjectBoard.js","component/ProjectBoard/ProjectTask/addProjectTask.js","component/ProjectBoard/ProjectTask/UpdateProjectTask.js","AllExceptMain.js","component/layout/header.js","App.js","serviceWorker.js","Reducers/reducer1.js","Reducers/backlogReducer.js","Reducers/Authorization.js","index.js"],"names":["Landing","props","className","to","setJwtToken","token","Axios","defaults","headers","common","gettingResponse","type","gettingTasks","id","dispatch","a","axios","get","resp","data","tasks","console","log","response","sendTokenToReducer","errorToToken","logOut","localStorage","removeItem","connect","state","error","auth","sendingAuthToBack","obj","post","authneticate","withRouter","useState","username","setUsername","fullName","setFullname","password","setPassword","confirmPassword","setConfirmPassword","pressed","setpressed","run","useRef","useEffect","current","history","push","allRequired","changingState","e","settype","target","value","Object","values","map","i","key","style","position","left","color","top","action","classes","placeholder","name","required","onChange","onClick","defaultValue","logingIn","setItem","decoded","jwt_decode","Loging","setPressed","goingToUpdate","pathname","desc","Deleting","Button","projects","reducer","getProjects","allProjectsRecieved","setprojects","reload","setreload","getItem","gettingprojects","delete","rep","allproject","length","x","projectIdentifier","projectName","description","fontSize","backdrop","show","click","Modal","close","opacity","transform","children","createProject","project","setProjectName","setProjectIdentifier","setDescription","start","setStart","end","setEnd","pressedSubmit","setPressedSubmit","closeModal","setCloseModal","classNames","preventDefault","start_date","end_date","setprojectName","setdesc","setproject","setError","location","setTimeout","gettingproject","onchange","updatingProject","newproject","updateShow","disabled","requestingTasks","prioclass","priostring","deletingTask","match","params","projectSequence","window","alert","priorityString","summary","acceptanceCriteria","backlog","projectTasks","todoTasks","setToDoTasks","inProgress","setInprogress","done","setDone","task","status","sortedtodo","sort","b","priority","sortedinprog","sorteddone","t","content","role","SendingdataToAction","backlog_id","addingProjectTask","setid","setsummary","setacceptanceCriteria","duedate","setduedate","setpriority","setstatus","Sendingdata","dueDate","val","backtoBoard","settask","id2","getTask","clone","taskPart","sendingtoBackEnd","patch","exact","path","component","Dashboard","AddProject","Update","ProjectBoard","addProjectTask","UpdateProjectTask","decodedToken","logout","setName","decode","fullname","singButtons","href","data-toggle","data-target","Date","now","exp","Register","Login","Boolean","hostname","initialreducer","initialState","projectTask","initialstate","rootreducer","combineReducers","Auth","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.4e1ef785.chunk.js","sourcesContent":["import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\n\nconst Landing=(props)=>{\n\n\n    return(\n        <div className=\"landing\">\n        <div className=\"light-overlay landing-inner text-dark\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-12 text-center\">\n                <h1 className=\"display-3 mb-4\">\n                  Personal Project Management Tool\n                </h1>\n                <p className=\"lead\">\n                  Create your account to join active projects or start your own\n                </p>\n                <hr />\n                <NavLink className=\"btn btn-lg btn-primary mr-2\" to=\"/register\">\n                  Sign Up\n                </NavLink>\n                <NavLink className=\"btn btn-lg btn-secondary mr-2\" to=\"/login\">\n                  Login\n                </NavLink>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n}\n\nexport default Landing","import Axios from \"axios\"\n\nconst setJwtToken=token=>{\n    if(token){\n        Axios.defaults.headers.common[\"Authorization\"]= token;\n    }else{\n        delete Axios.defaults.headers.common[\"Authorization\"]\n    }\n}\n\nexport default setJwtToken;","import axios from 'axios'\nimport setJwtToken from './SetJwtToken'\nimport jwt_decode from 'jwt-decode'\n\nexport const createProject=(project,history)=>{\n    return async dispatch=>{\n        try{\n            const resp= await axios.post(\"/api/project\",project)\n            const data=await resp.data\n        }catch(e){\n            console.log(e.response.data)\n            dispatch(gettingResponse())\n\n        }\n    }\n  \n}\n\nexport const gettingResponse=()=>{\n    return{\n        type:'response',\n    }\n}\n\n\nexport const allProjectsRecieved=(projects)=>{\n    return{\n        type:\"projects\",\n        projects:projects\n    }\n}\n\nexport const errorProjectTask=()=>{\n    return{\n        type:'error'\n    }\n}\n\n\nexport const addingProjectTask=(task,backlog_id)=>{\n    return async dispatch=>{\n        try{\n            const resp= await axios.post(`/api/backlog/${backlog_id}`,task)\n            const data = await resp.data\n        }catch(e){\n            console.log(e.response.data)\n            dispatch(errorProjectTask())\n        }\n    }\n \n}\n\nexport const taskToReducer=(tasks)=>{\n    return{\n        type:'tasks',\n        tasks:tasks\n    }\n}\n\nexport const gettingTasks=(id)=>{\n    return async dispatch=>{\n        try{\n            const resp = await axios.get(`/api/backlog/${id}`)\n            const data = await resp.data\n            dispatch(taskToReducer(data))\n        }catch(e){\n            console.log(e.response.data)\n            dispatch(errorProjectTask())\n        }\n    }\n}\n\nexport const authneticate=(obj)=>{\n    return async dispatch=>{\n        try{\n            const resp= await axios.post('/api/users/register',obj)\n            const data= await resp.data\n            dispatch(errorToToken(false))\n        }catch(e){\n            console.log(e.response.data)\n            dispatch(errorToToken(e.response.data))\n        }\n    }\n}\n\nexport const sendTokenToReducer=(token)=>{\n    return{\n        type:'tokenRecieved',\n        token:token\n    }\n}\n\nexport const errorToToken=(resp)=>{\n    return {\n        type:'errorForAuth',\n        resp:resp\n    }\n}\n\nexport const Loging=(obj)=>{\n    return async dispatch=>{\n        try{\n            const resp = await axios.post('/api/users/login',obj)\n            const data = await resp.data\n            let token=data.token\n            localStorage.setItem(\"jwt\",token)\n            setJwtToken(token)\n            let decoded=jwt_decode(token)\n            dispatch(sendTokenToReducer(decoded))\n        }catch(e){\n            console.log(e.response.data)\n            dispatch(errorToToken(e.response.data))\n        }\n    }\n}\n\nexport const logOut=()=>{\n    localStorage.removeItem('jwt')\n    setJwtToken(false)\n    return{\n        type:'logout'\n    }\n}\n","import React, {useState, useEffect, useRef, Fragment } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { authneticate } from '../../../action'\nimport classes from 'classnames'\n\n\nconst Register=(props)=>{\n    const [username,setUsername]=useState(\"\")\n    const [fullName,setFullname]=useState(\"\")\n    const [password,setPassword]=useState(\"\")\n    const [confirmPassword,setConfirmPassword]=useState(\"\")\n    const [pressed,setpressed]=useState(false)\n\n    let run=useRef(true)\n    useEffect(()=>{\n        if(run.current){\n            run.current=false\n            return\n        }\n    if(props.error===false){\n        props.history.push('/login')\n    }\n\n    // eslint-disable-next-line\n    },[props.error])\n\n    var changingState=(e,settype)=>{\n        let content=e.target.value\n        settype(content)\n      }\n\n    var Submiting=()=>{\n            setpressed(true)\n            if(username===\"\"||fullName===\"\"||password===\"\"||confirmPassword===\"\"){\n                return\n            }\n            if(password!==confirmPassword) return;\n            let obj={username,fullName,password,confirmPassword}\n            props.sendingAuthToBack(obj)\n        }\n\n    let allRequired\n    if(props.error){\n       let errors=Object.values(props.error)\n        allRequired=errors.map(i=>(\n        <p key={i} style={{position:'relative',left:'254px',color:'red'}}>{i}</p>\n        ))\n    }\n  \n    return(\n        <Fragment>\n        <div  style={{position:'relative', top:'100px'}} className=\"register\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\n              <p className=\"lead text-center\">Create your Account</p>\n              {pressed &&password!==confirmPassword?<p style={{position:\"relative\", color:'red',left:'216px'}}>Please make sure that passwords match</p>:null}\n              {allRequired}\n              <form action=\"create-profile.html\">\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classes(\"form-control form-control-lg\",{'is-invalid':pressed&&fullName===\"\"})}\n                    placeholder=\"Full Name\"\n                    name=\"fullname\"\n                    required\n                    onChange={(e)=>changingState(e,setFullname)}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"email\"\n                    className={classes(\"form-control form-control-lg\",{'is-invalid':pressed&&username===\"\"})}\n                    placeholder=\"Email Address\"\n                    name=\"username\"\n                    onChange={(e)=>changingState(e,setUsername)}\n\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classes(\"form-control form-control-lg\",{'is-invalid':pressed&&password===\"\"})}\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    onChange={(e)=>changingState(e,setPassword)}\n\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classes(\"form-control form-control-lg\",{'is-invalid':pressed&&confirmPassword===\"\"})}\n                    placeholder=\"Confirm Password\"\n                    name=\"password2\"\n                    onChange={(e)=>changingState(e,setConfirmPassword)}\n\n                  />\n                </div>\n                <input onClick={Submiting} type=\"button\" className=\"btn btn-info btn-block mt-4\" defaultValue=\"Submit\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n    )\n}\n\nconst maptostate=state=>{\n    return{\n        error:state.auth.error\n    }\n}\n\n\nconst maptoprops=dispatch=>{\n    return{\n        sendingAuthToBack:(obj)=>dispatch(authneticate(obj))\n    }\n}\n\nexport default connect(maptostate,maptoprops)(withRouter(Register));","import React, { useState, useEffect, useRef } from 'react'\nimport classes from 'classnames'\nimport {withRouter} from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { Loging } from '../../../action'\n\n\nconst Login=(props)=>{\n  const [username,setUsername]=useState(\"\")\n  const [password,setPassword]=useState(\"\")\n  const [pressed,setPressed]=useState(false)\n\n    let run=useRef(true)\n    useEffect(()=>{\n      if(run.current){\n        run.current=false\n        return\n      }\n      if(props.token){\n        props.history.push('/dashboard')\n      }\n\n      // eslint-disable-next-line\n    },[props.token])\n\n  var changingState=(e,settype)=>{\n    let content=e.target.value\n    settype(content)\n  }\n\n  var submiting=()=>{\n    setPressed(true)\n    if(username===\"\"||password===\"\") return;\n    let obj={username,password}\n    props.logingIn(obj)\n  }\n  return(\n        <div style={{position:'relative', top:'200px'}} className=\"login\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Log In</h1>\n              <form action=\"dashboard.html\">\n                <div className=\"form-group\">\n                  <input\n                    type=\"email\"\n                    className={classes(\"form-control form-control-lg\",{\n                    \"is-invalid\":username===\"\"&&pressed\n                    })}\n                    placeholder=\"Email Address\"\n                    name=\"email\"\n                    onChange={(e)=>changingState(e,setUsername)}\n\n\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classes(\"form-control form-control-lg\",{\n                      \"is-invalid\":password===\"\"&&pressed\n                      })}              \n                    placeholder=\"Password\"\n                    name=\"password\"\n                    onChange={(e)=>changingState(e,setPassword)}\n                  />\n                </div>\n                <input type=\"button\" onClick={submiting} className=\"btn btn-info btn-block mt-4\" defaultValue=\"Submit\"/>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n}\n\n\nconst maptostate=state=>{\n  return{\n    token:state.auth.token\n  }\n}\n\nconst maptoprops=dispatch=>{\n  return{\n    logingIn:(obj)=>dispatch(Loging(obj))\n  }\n}\n\nexport default connect(maptostate,maptoprops)(withRouter(Login));","import React from 'react'\nimport { NavLink } from 'react-router-dom';\nimport {withRouter} from 'react-router-dom'\n\n\nconst Item =(props)=>{\n\n  var goingToUpdate=async()=>{\n    props.history.push({\n      pathname:`/project/${props.id}`,\n      state:props.id\n    })\n\n  }\n\n\n\n    return(\n        <div className=\"container\">\n        <div className=\"card card-body bg-light mb-3\">\n          <div className=\"row\">\n            <div className=\"col-2\">\n              <span className=\"mx-auto\">{props.name}</span>\n            </div>\n            <div className=\"col-lg-6 col-md-4 col-8\">\n              <h3>Project id:{props.id}</h3>\n              <p>{props.desc}</p>\n            </div>\n            <div className=\"col-md-4 d-none d-lg-block\">\n              <ul className=\"list-group\">\n                <NavLink to={`/projectboard/${props.id}`}>\n                  <li className=\"list-group-item board\">\n                    <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\n                  </li>\n                </NavLink>\n                  <li className=\"list-group-item update\">\n                    <i onClick={goingToUpdate} className=\"fa fa-edit pr-1\"> Update Project Info</i>\n                  </li>\n                {/* <NavLink to=\"#\"> */}\n                  <li className=\"list-group-item delete\">\n                    <i onClick={()=>props.Deleting(props.id)} className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\n                  </li>\n                {/* </NavLink> */}\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n}\n\n\nexport default withRouter(Item);","import React, { Fragment } from 'react'\nimport { NavLink} from 'react-router-dom'\n\n\nconst Button=(props)=>{\n    return(\n<Fragment>  \n    <NavLink to=\"/addProject\" className=\"btn btn-lg btn-info\">\n        Create a Project\n    </NavLink>\n </Fragment>\n       \n    );\n}\n\n\nexport default Button;","import React, { useEffect, useState } from 'react'\nimport Item from './Item'\nimport Button from './Project/Button'\nimport {connect} from 'react-redux'\nimport {allProjectsRecieved} from './../action'\nimport axios from 'axios'\n\n\n\nconst Dashboard=(props)=>{\n  const [projects,setprojects]=useState(null)\n  const [reload,setreload]=useState(true)\n  useEffect(()=>{\n    let token=localStorage.getItem('jwt')\n    if(!token){\n      props.history.push('/')\n    }\n    var gettingprojects=async()=>{\n      try{\n\n        const resp = await axios.get('/api/project/all')\n        const data = await resp.data\n        await props.getProjects(data)\n        setprojects(data) \n        setreload(false)\n      }catch(e){\n        console.log(e.response.data)\n      }   \n   }\n   gettingprojects()\n  // eslint-disable-next-line \n  },[reload])\n\n  var Deleting=async(id)=>{\n    const rep= await axios.delete(`/api/project/${id}`)\n    const data= await rep.data\n    setreload(true)\n  }\n    let allproject=null\n    if(projects===null||projects.length===0){\n      allproject=null\n    }else{\n      allproject=projects.map(x=>(\n         <Item Deleting={Deleting} key={x.projectIdentifier} name={x.projectName} id={x.projectIdentifier} desc={x.description}/>\n      ))\n    }\n    return(\n        <div className=\"projects\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <h1 className=\"display-4 text-center\">Projects</h1>\n              <br />\n             <Button/>\n              <br />\n              <hr />\n              {allproject ? allproject:<p style={{fontSize:'50px',left:'400px',position:'absolute'}}>You have no projects</p>}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n\n   \n    \n}\n\n\nconst maptostate=state=>{\n  return{\n    projects:state.reducer.projects,\n    \n  }\n}\n\n\nconst maptoprops=dispatch=>{\n  return{\n    getProjects:(projects)=>dispatch(allProjectsRecieved(projects))\n  }\n}\n\n\n\nexport default connect(maptostate,maptoprops) (Dashboard);","\nimport React from \"react\"\nimport \"./Backdrop.css\"\n\nconst backdrop=(props)=>(\n    props.show ? <div className=\"back\" onClick={props.click}></div>:null\n)\n\nexport default backdrop","import React,{Fragment} from 'react';\nimport \"./Modal.css\"\nimport Back from '../Backdrop'\n\nconst Modal=(props)=>{\n\n  \n    return( \n         <Fragment>\n             <Back show={props.show} click={props.close}/>\n             <div className=\"modal-wrapper \" style={{opacity :props.show ? \"1\":\"1\",\n             transform: props.show ? \"translateY(0vh)\" : 'translateY(-100vh)' }}>\n             <div className=\"modal-header\" >\n             <label style={{color:\"white\",left: \"134px\",position: \"relative\"}} > We have encountered an error</label>\n             <span   className=\"close-modal-btn\" onClick={props.close}>x</span>\n\n             </div>\n             <div className=\"modal-body\">\n                <div> {props.children}</div>\n\n             </div>\n             <div className=\"modal-footer\">\n\n             </div>\n              </div>\n         </Fragment>\n    )\n \n}\n\nexport default Modal","import React, { useState, Fragment } from 'react'\nimport {connect} from 'react-redux'\nimport {createProject} from '../../action'\nimport {withRouter}from 'react-router-dom'\nimport classNames from 'classnames'\nimport Modal from '../../Modal/Modal'\n\nconst AddProject=(props)=>{\n    const[projectName,setProjectName]=useState(\"\");\n    const [projectIdentifier,setProjectIdentifier]=useState(\"\");\n    const [description,setDescription]=useState(\"\");\n    const [start,setStart]=useState(\"\");\n    const [end,setEnd]=useState(\"\");\n    const [pressedSubmit,setPressedSubmit]=useState(false)\n    const [closeModal,setCloseModal]=useState(false)\n\n    var onChange=(e,settype)=>{\n        let content=e.target.value\n        settype(content)\n        \n    }\n\n    var onSubmit=(e)=>{\n        e.preventDefault();\n        setPressedSubmit(true)\n        setCloseModal(false)\n        let obj={\n            projectName: projectName,\n            projectIdentifier: projectIdentifier,\n            description: description,\n            start_date: start,\n            end_date: end\n        }\n\n         for(let val of Object.values(obj)){\n          if(val===\"\"){\n            return;\n          }\n        }\n     \n        props.createProject(obj,props.history)\n        if(!props.error){\n          props.history.push('/dashboard')\n\n        }\n    }\n\n    var close=()=>{\n      setCloseModal(true)\n    }\n\n\n    return(\n      <Fragment>\n        {props.error&& closeModal===false ? <Modal close={close} show={props.error}>There is an error with your request, please try again</Modal>:null}\n        <div>\n        <div className=\"project\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-8 m-auto\">\n                <h5 className=\"display-4 text-center\">Create Project form</h5>\n                <hr />\n                <form >\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className={classNames(\"form-control form-control-lg \",{\n                        \"is-invalid\":projectName===\"\"&&pressedSubmit\n                      })}\n                      placeholder=\"Project Name\"\n                      name=\"projectName\"\n                      value={projectName}\n                      onChange={(e)=>onChange(e,setProjectName)}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className={classNames(\"form-control form-control-lg\",{\n                        \"is-invalid\":projectIdentifier===\"\"&&pressedSubmit\n                      })}\n                      placeholder=\"Unique Project ID\"\n                      name=\"projectIdentifier\"\n                      value={projectIdentifier}\n                      onChange={(e)=>onChange(e,setProjectIdentifier)}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <textarea\n                      className={classNames(\"form-control form-control-lg\",{\n                        \"is-invalid\":description===\"\"&&pressedSubmit\n                      })}\n                      placeholder=\"Project Description\"\n                      name=\"description\"\n                      value={description}\n                      onChange={(e)=>onChange(e,setDescription)}\n                    />\n                  </div>\n                  <h6>Start Date</h6>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"date\"\n                      className={classNames(\"form-control form-control-lg\",{\n                        \"is-invalid\":start===\"\"&&pressedSubmit\n                      })}\n                      name=\"start_date\"\n                      value={start}\n                      onChange={(e)=>onChange(e,setStart)}\n                    />\n                  </div>\n                  <h6>Estimated End Date</h6>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"date\"\n                      className={classNames(\"form-control form-control-lg\",{\n                        \"is-invalid\":end===\"\"&&pressedSubmit\n                      })}                  \n                      name=\"end_date\"\n                      value={end}\n                      onChange={(e)=>onChange(e,setEnd)}\n                    />\n                  </div>\n\n                  <button\n                    type=\"button\"\n                    onClick={onSubmit}\n                    className=\"btn btn-primary btn-block mt-4\">SUBMIT</button>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      </Fragment>\n    );\n    \n}\n\nconst maptostate=state=>{\n  return{\n    error:state.reducer.error\n  }\n}\n\nconst maptoprops=dispatch=>{\n  return{\n    createProject:(project,history)=>dispatch(createProject(project,history))\n  }\n}\n\n\nexport default withRouter(connect(maptostate,maptoprops)(AddProject));","import React, { useEffect, useState, Fragment } from \"react\";\nimport {withRouter, NavLink} from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport axios from \"axios\";\nimport classes from 'classnames'\n\n\nconst UpdateProject=(props)=>{   \n  const [projectName,setprojectName]=useState(\"\")\n  const [desc,setdesc]=useState(\"\")\n  const [project,setproject]=useState(null)\n  const [error,setError]=useState(false)\n  const [pressed,setpressed]=useState(false)\n\n\n\n\n\n  useEffect(()=>{\n    var gettingproject=async()=>{\n      try{\n        const resp=await axios.get(`http://localhost:8080/api/project/${props.history.location.state}`)\n        const project = await resp.data\n        setprojectName(project.projectName)\n        setdesc(project.description)\n        setproject(project)\n      }catch(e){\n        setError(true)\n        setTimeout(() => {\n          props.history.push('/dashboard')\n        }, 2000);\n      }\n    \n    }\n    gettingproject()\n\n  //eslint-disable-next-line\n  },[])\n\n  var onchange=(e,settype)=>{\n    let content=e.target.value\n    settype(content)\n    \n  }\n \n\n  var updatingProject=async()=>{\n    setpressed(true)\n    if(projectName===\"\"||desc===\"\"){\n      // setpressed(false)\n      return\n    };\n    let newproject={...project}\n    newproject.projectName=projectName\n    newproject.description=desc\n    await axios.post(`/api/project/`,newproject)\n    props.history.push('/dashboard')\n  }\n  let updateShow=null\n  if(error){\n    updateShow= <p style={{fontSize:'40px',position:'absolute', left:'650px',top:'300px'}}>Unfortunately this project doesn't exist</p>\n    \n  }else{\n    updateShow=(\n      <Fragment>\n    <div className=\"project\">\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-md-8 m-auto\">\n        <NavLink  to='/dashboard' className=\"btn btn-light\">\n                Back to Project Board\n            </NavLink>\n          <h5 className=\"display-4 text-center\">Update Project form</h5>\n          <hr />\n          <form>\n            <div className=\"form-group\">\n              <input\n                type=\"text\"\n                className={classes(\"form-control form-control-lg \",{\n                  \"is-invalid\":projectName===\"\" &&pressed\n                })}\n                placeholder=\"Project Name\"\n                defaultValue={project ? projectName:null}\n                onChange={(e)=>onchange(e,setprojectName)}\n\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                type=\"text\"\n                className=\"form-control form-control-lg\"\n                placeholder={project ? project.projectIdentifier:null}\n                disabled\n              />\n            </div>\n            <div className=\"form-group\">\n              <textarea\n                className={classes(\"form-control form-control-lg\",{\n                  \"is-invalid\":desc===\"\"&&pressed\n                })}\n                value={project ? desc:\"Description...\"}\n                onChange={(e)=>onchange(e,setdesc)}\n                placeholder=\"Description\"\n\n              />\n            </div>\n            <h6>Start Date</h6>\n            <div className=\"form-group\">\n              <input\n                type=\"text\"\n                className=\"form-control form-control-lg\"\n                name=\"start_date\"\n                placeholder={project ? project.start_date: null}\n                disabled\n              />\n            </div>\n            <h6>Estimated End Date</h6>\n            <div className=\"form-group\">\n              <input\n                type=\"text\"\n                className=\"form-control form-control-lg\"\n                name=\"end_date\"\n                placeholder={project ? project.end_date:null}\n                disabled\n              />\n            </div>\n            <input\n              type=\"button\"\n              className=\"btn btn-primary btn-block mt-4\"\n              onClick={updatingProject}\n              defaultValue=\"Update\"\n            />\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n  </Fragment>)\n  }\n    return (\n      <Fragment>\n      {updateShow}\n      </Fragment>\n  );\n}\nconst maptostate=state=>{\n  return{\n    projects:state.reducer.projects\n  }\n}\n\nexport default connect(maptostate)(withRouter(UpdateProject));\n","import React  from 'react'\nimport { NavLink , withRouter } from 'react-router-dom'\nimport Axios from 'axios'\nimport {connect} from 'react-redux'\nimport { gettingTasks } from '../../../action'\n\n\nconst ProjectTask=(props)=>{\n\n  var deletingTask=async()=>{\n    try{\n      const resp= await Axios.delete(`/api/backlog/${props.match.params.id}/${props.projectSequence}`)\n      const data = await resp.data\n      window.location.reload(false)\n    }catch(e){\n      console.log(e)\n      window.alert('there was a problem with your request please try again')\n    }\n  \n  }\n\n  let prioclass;\n  let priostring;\n  if(props.priorityString===1){\n    prioclass='bg-danger text-light'\n    priostring=\"HIGH\"\n  }else if(props.priorityString===2){\n    prioclass=\"bg-warning text-light\"\n    priostring=\"MEDIUM\"\n  }else{\n    prioclass=\"bg-info text-light\"\n    priostring=\"LOW\"\n  }\n    return(\n        <div className=\"card mb-1 bg-light\">\n        <div className={`card-header text-primary ${prioclass}`}>\n          <div>ID: {props.projectSequence}</div>\n         Priority: {priostring}\n        </div>\n        <div className=\"card-body bg-light\">\n          <h5 className=\"card-title\">{props.summary}</h5>\n          <p className=\"card-text text-truncate \">\n            {props.acceptanceCriteria}\n          </p>\n          <NavLink to={`/updateprojecttask/${props.match.params.id}/${props.projectSequence}`} className=\"btn btn-primary\">\n            View / Update\n          </NavLink>\n\n          <button onClick={deletingTask} className=\"btn btn-danger ml-4\">Delete</button>\n        </div>\n      </div>\n    )\n    \n}\nconst maptoprops=dispatch=>{\n  return{\n    requestingTasks:(id)=>dispatch(gettingTasks(id))\n  }\n}\n\n\nexport default connect(null,maptoprops) (withRouter(ProjectTask));","import React, { useState, useEffect, useRef } from 'react'\nimport {withRouter} from 'react-router-dom'\nimport ProjectTask from './ProjectTask/ProjectTask'\nimport {connect} from 'react-redux'\n\n\nconst Backlog=(props)=>{\n    const [todoTasks,setToDoTasks]=useState([])\n    const [inProgress,setInprogress]=useState([])\n    const [done,setDone]=useState([])\n\n\n\nlet run= useRef(1)\n    useEffect(()=>{\n        if(run.current===1){\n            run.current--\n            return\n        }\n        console.log(props.tasks)\n        for(let task of props.tasks){\n            if(task.status===\"TO_DO\"){\n                setToDoTasks(todoTasks=>[...todoTasks,task])\n            }else if(task.status===\"IN_PROGRESS\"){\n                setInprogress(inProgress=>[...inProgress,task])\n            }else{\n                setDone(done=>[...done,task])\n            }\n        }\n// eslint-disable-next-line \n    },[run.current])\n\n    \n\n    let sortedtodo=todoTasks.sort((a,b)=>(a.priority>b.priority)?1:-1)\n    let sortedinprog=inProgress.sort((a,b)=>(a.priority>b.priority)?1:-1)\n    let sorteddone=done.sort((a,b)=>(a.priority>b.priority)?1:-1)\n\n   \n    return(\n        <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-secondary text-white\">\n                <h3>TO DO</h3>\n              </div>\n            </div>\n            {\n                sortedtodo.map(t=>(\n                    <ProjectTask key={t.projectSequence} projectSequence={t.projectSequence}\n                    priorityString={t.priority} summary={t.summary} \n                    acceptanceCriteria={t.acceptanceCriteria}/>\n                ))\n            }\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-primary text-white\">\n                <h3>In Progress</h3>\n              </div>\n            </div>\n            {\n                sortedinprog.map(t=>(\n                    <ProjectTask key={t.projectSequence} projectSequence={t.projectSequence}\n                    priorityString={t.priority} summary={t.summary} \n                    acceptanceCriteria={t.acceptanceCriteria}/>\n                ))\n            }\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-success text-white\">\n                <h3>Done</h3>\n              </div>\n            </div>\n            {\n                sorteddone.map(t=>(\n                    <ProjectTask key={t.projectSequence} projectSequence={t.projectSequence}\n                    priorityString={t.priority} summary={t.summary} \n                    acceptanceCriteria={t.acceptanceCriteria}/>\n                ))\n            }\n          </div>\n        </div>\n      </div>\n    )\n}\n\n\n\nconst maptostate=state=>{\n    return{\n        tasks:state.backlog.projectTasks,\n    }\n}\n\n\nexport default connect(maptostate)(withRouter(Backlog))","import React, { useState, useEffect, Fragment } from 'react'\nimport { NavLink } from 'react-router-dom';\nimport {withRouter} from 'react-router-dom'\nimport Backlog from './Backlog'\nimport {connect} from 'react-redux'\nimport {gettingTasks} from '../../action'\n\nconst ProjectBoard=(props)=>{\n    const [id]=useState(props.match.params.id)\n    \n    \n\n  useEffect(()=>{\n    props.requestingTasks(id)\n  // eslint-disable-next-line  \n    },[])\n\n\n    let content;\n\n    if(props.error){\n    content=<div className=\"alert alert-danger text-center\" role=\"alert\" >We can't find any project with this id {props.match.params.id}</div>\n      setTimeout(() => {\n        props.history.push('/dashboard')\n      }, 3000);\n    }else{\n      content=(  \n         <div className=\"container\">\n      <NavLink to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\n        <i className=\"fas fa-plus-circle\"> Create Project Task</i>\n      </NavLink>\n      <br />\n      <hr />\n      <Backlog/>\n    </div>\n    )\n    }\n\n    return(\n      <Fragment>\n         {content}\n      </Fragment>\n    );\n}\nconst maptostate=state=>{\n  return{\n    error:state.backlog.error,\n  }\n\n}\nvar maptoprops=dispatch=>{\n  return{\n      requestingTasks:(id)=>dispatch(gettingTasks(id))\n  }\n}\n\n\n\nexport default connect(maptostate,maptoprops)(withRouter(ProjectBoard));","import React ,{useState, useEffect, Fragment}from 'react'\nimport {withRouter,NavLink} from 'react-router-dom'\nimport classes from 'classnames'\nimport {connect} from 'react-redux'\nimport {addingProjectTask} from '../../../action'\nimport Modal from '../../../Modal/Modal'\n\n\n\nconst AddProjectTask=(props)=>{\n    const [id,setid]=useState(null)\n    const [summary,setsummary]=useState(\"\")\n    const [acceptanceCriteria,setacceptanceCriteria]=useState(\"\")\n    const [duedate,setduedate]=useState(\"\")\n    const [priority,setpriority]=useState(0)\n    const [status,setstatus]=useState(\"\")\n    const [pressedSubmit,setPressedSubmit]=useState(false)\n    const [closeModal,setCloseModal]=useState(false)\n\n    useEffect(()=>{\n        setid(props.match.params.id)\n  // eslint-disable-next-line  \n    },[])\n\n    var onchange=(e,settype)=>{\n        e.preventDefault();\n        let content=e.target.value\n        settype(content)\n        \n    }\n    var Sendingdata=async(e)=>{\n        e.preventDefault();\n        setPressedSubmit(true)\n        let task={\n            summary:summary,\n            acceptanceCriteria:acceptanceCriteria,\n            dueDate:duedate,\n            priority:priority,\n            status:status,\n        }\n        for(let val of Object.values(task)){\n            if(val===\"\"|| val===0){\n              return;\n            }\n          }\n          props.SendingdataToAction(task,id)\n          setTimeout(() => {\n             backtoBoard()\n         }, 2000);\n        }\n       \n\n    var backtoBoard=()=>{\n        props.history.push(`/projectboard/${id}`)\n    }\n    var close=()=>{\n        setCloseModal(true)\n      }\n\n    return(\n     <Fragment>\n        {props.error&& closeModal===false ? <Modal close={close} show={props.error}>There is an error with your request, please try again</Modal>:null}  \n        <div className=\"add-PBI\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-8 m-auto\">\n            <NavLink  to={`/projectBoard/${id}`} className=\"btn btn-light\">\n                Back to Project Board\n            </NavLink>\n            <h4 className=\"display-4 text-center\">Add Project Task</h4>\n            <p className=\"lead text-center\">Project Name + Project Code</p>\n            <form>\n                <div className=\"form-group\">\n                <input\n                    type=\"text\"\n                    className={classes(\"form-control form-control-lg\",{\n                        \"is-invalid\":summary===\"\"&&pressedSubmit\n                    })}\n                    name=\"summary\"\n                    placeholder=\"Project Task summary\"\n                    onChange={(e)=>onchange(e,setsummary)}\n                />\n                </div>\n                <div className=\"form-group\">\n                <textarea\n                    className={classes(\"form-control form-control-lg\",{\n                        \"is-invalid\":acceptanceCriteria===\"\"&&pressedSubmit\n                    })}\n                    placeholder=\"Acceptance Criteria\"\n                    name=\"acceptanceCriteria\"\n                    onChange={(e)=>onchange(e,setacceptanceCriteria)}\n\n                />\n                </div>\n                <h6>Due Date</h6>\n                <div className=\"form-group\">\n                <input\n                    type=\"date\"\n                    className={classes(\"form-control form-control-lg\",{\n                        \"is-invalid\":duedate===\"\"&&pressedSubmit\n                    })}\n                    name=\"dueDate\"\n                    onChange={(e)=>onchange(e,setduedate)}\n\n                />\n                </div>\n                <div className=\"form-group\">\n                <select\n                    className={classes(\"form-control form-control-lg\",{\n                        \"is-invalid\":priority===0&&pressedSubmit\n                    })}\n                    name=\"priority\"\n                    onChange={(e)=>onchange(e,setpriority)}\n\n                >\n                    <option value={0}>Select Priority</option>\n                    <option value={1}>High</option>\n                    <option value={2}>Medium</option>\n                    <option value={3}>Low</option>\n                </select>\n                </div>\n\n                <div className=\"form-group\">\n                <select\n                    className={classes(\"form-control form-control-lg\",{\n                        \"is-invalid\":status===\"\"&&pressedSubmit\n                    })}\n                    name=\"status\"\n                    onChange={(e)=>onchange(e,setstatus)}\n\n                >\n                    <option value=\"\">Select Status</option>\n                    <option value=\"TO_DO\">TO DO</option>\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                    <option value=\"DONE\">DONE</option>\n                </select>\n                </div>\n\n                <input\n                type=\"button\"\n                className=\"btn btn-primary btn-block mt-4\"\n                defaultValue=\"Submit\"\n                onClick={Sendingdata}\n                />\n            </form>\n            </div>\n        </div>\n        </div>\n    </div>\n  </Fragment>\n\n  )\n\n}\n\nconst maptostate=state=>{\n    return{\n        error:state.backlog.error\n    }\n}\n\nconst maptoprops=dispatch=>{\n    return{\n        SendingdataToAction:(task,backlog_id)=>dispatch(addingProjectTask(task,backlog_id))\n    }\n}\n\nexport default withRouter(connect(maptostate,maptoprops)(AddProjectTask));","import React, { useState, useEffect, Fragment } from 'react'\nimport {withRouter, NavLink} from 'react-router-dom'\nimport Axios from 'axios'\nimport classes from 'classnames'\n\nconst UpdateTask=(props)=>{\n    const [task,settask]=useState(null)\n    const [error,setError]=useState(false)\n    const [pressed,setPressed]=useState(false)\n    useEffect(()=>{\n        var getTask=async()=>{\n            try{\n                const resp = await Axios.get(`/api/backlog/${props.match.params.id}/${props.match.params.id2}`)\n                const data= await resp.data\n                settask(data)\n            }catch(e){\n                console.log(e)\n                setError(true)\n                setTimeout(() => {\n                  props.history.push(`/projectboard/${props.match.params.id}`)\n                }, 3000);\n            }\n           \n        }\n        getTask()\n\n  // eslint-disable-next-line\n    },[])\n     \n\n\n    var onchange=(e,name)=>{\n        e.preventDefault()\n        let clone={...task}\n        let taskPart=clone[name]\n        taskPart=e.target.value\n        clone[name]=taskPart\n        settask(clone)\n        \n    }\n\n\n    var sendingtoBackEnd=async()=>{\n        setPressed(true)\n        for(let val of Object.values(task)){\n            if(val===\"\"|| val===0){\n              return;\n            }\n          }\n        try{\n            const resp = await Axios.patch(`/api/backlog/${props.match.params.id}/${props.match.params.id2}`,task)\n            const data = await resp.data\n            console.log(data)\n            props.history.push(`/projectboard/${props.match.params.id}`)\n\n        }catch(e){\n            console.log(e)\n            setError(true)\n            setTimeout(() => {\n                props.history.push(`/projectboard/${props.match.params.id}`)\n            }, 3000);\n        }\n    }\n    let content;\n    if(error || task===null){\n        content=<div className=\"alert alert-danger text-center\" role=\"alert\" >We can't find any project Task with this id {props.match.params.id2}</div>\n    }else{\n        content=(\n            <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <NavLink to={`/projectboard/${props.match.params.id}`} className=\"btn btn-light\">\n                Back to Project Board\n              </NavLink>\n              <h4 className=\"display-4 text-center\">Update Project Task</h4>\n              <p className=\"lead text-center\">Project Name + Project Code</p>\n              <form>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classes(\"form-control form-control-lg\",{\"is-invalid\":task.summary===\"\"&&pressed})}  \n                     name=\"summary\"\n                    placeholder=\"Project Task summary\"\n                    defaultValue={task ? task.summary:null}\n                    onChange={(e)=>onchange(e,'summary')}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className={classes(\"form-control form-control-lg\",{\"is-invalid\":task.acceptanceCriteria===\"\"&&pressed})} \n                    placeholder=\"Acceptance Criteria\"\n                    name=\"acceptanceCriteria\"\n                    defaultValue={task ? task.acceptanceCriteria:null}\n                    onChange={(e)=>onchange(e,'acceptanceCriteria')}\n                  />\n                </div>\n                <h6>Due Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className={classes(\"form-control form-control-lg\",{\"is-invalid\":task.dueDate===\"\"&&pressed})} \n                    name=\"dueDate\"\n                    defaultValue={task? task.dueDate:null}\n                    onChange={(e)=>onchange(e,'dueDate')}\n\n                  />\n                </div>\n                <div className=\"form-group\">\n                   your last choice is: {task ? task.priority:null}\n                  <select\n                    className={classes(\"form-control form-control-lg\",{\"is-invalid\":task.priority===0&&pressed})} \n                    name=\"priority\"\n                    onChange={(e)=>onchange(e,'priority')}\n\n                  >\n                    <option value={0}>Select Priority</option>\n                    <option value={1}>High</option>\n                    <option value={2}>Medium</option>\n                    <option value={3}>Low</option>\n                  </select>\n                </div>\n\n                <div className=\"form-group\" >\n                    your last choice is: {task ? task.status:null}\n                  <select\n                    className={classes(\"form-control form-control-lg\",{\"is-invalid\":task.status===\"\"&&pressed})} \n                    name=\"status\"\n                    onChange={(e)=>onchange(e,'status')}\n\n                  >\n                    <option value=\"\">select status</option>\n                    <option value=\"TO_DO\">TO DO</option>\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                    <option value=\"DONE\">DONE</option>\n                  </select>\n                </div>\n\n                <input\n                  type=\"button\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                  defaultValue=\"Submit\"\n                  onClick={sendingtoBackEnd}\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n        )\n    }\n    return(\n        <Fragment>\n            {content}\n        </Fragment>\n    )\n}\n\nexport default withRouter(UpdateTask);","import React from 'react'\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Dashboard from './component/Dashboard'\nimport AddProject from './component/Project/AddProject'\nimport Update from './component/Project/UpdateProject'\nimport { withRouter, Switch, Route }  from 'react-router-dom'\nimport ProjectBoard from './component/ProjectBoard/ProjectBoard'\nimport addProjectTask from './component/ProjectBoard/ProjectTask/addProjectTask';\nimport UpdateProjectTask from './component/ProjectBoard/ProjectTask/UpdateProjectTask';\n\n\n\n\nconst All=(props)=>{\n\n  // \n    return(\n        <div>\n       {/* {props.location.pathname===\"/\"||props.location.pathname==='/register'||props.location.pathname==='/login' ? null : }  */}\n        <Switch>\n          <Route exact path='/dashboard' component={Dashboard}/>\n          <Route exact path=\"/addproject\" component={AddProject}/>\n          <Route exact path=\"/project/:id\" component={Update}/>\n          <Route exact path='/projectboard/:id' component={ProjectBoard}/>\n          <Route exact path='/addprojecttask/:id' component={addProjectTask}/>\n          <Route exact path='/updateprojecttask/:id/:id2' component={UpdateProjectTask}/>\n        </Switch>\n        </div>\n    \n    )\n}\n\n\nexport default withRouter(All);","import React, { useState, useEffect } from \"react\"\nimport { NavLink, withRouter } from \"react-router-dom\";\nimport jwt_decode from 'jwt-decode'\nimport { logOut } from \"../../action\";\nimport {connect} from 'react-redux'\n\n\n\nconst Header=(props)=>{\n  const [name,setName]=useState(\"\")\n\n \n  useEffect(()=>{\n   \n          let token =localStorage.getItem('jwt')\n          if(token){\n            let decode=jwt_decode(token)\n            setName(decode.fullname)\n          }\n  \n  },[props.decodedToken])\n    \n \n   var pressedForLogOut=()=>{\n     try{\n      props.logout()\n      setName(\"\")\n      props.history.push('/')\n     }catch(e){\n       console.log(e)\n     }\n\n   }\n   let singButtons;\n   if(name===\"\"){\n     singButtons=(\n      <ul className=\"navbar-nav ml-auto\">\n      <li className=\"nav-item\">\n        <NavLink className=\"nav-link \" to=\"/register\">\n          Sign Up\n        </NavLink>\n      </li>\n      <li className=\"nav-item\">\n        <NavLink className=\"nav-link\" to=\"/login\">\n          Login\n        </NavLink>\n      </li>\n    </ul>\n     )\n   }else{\n    singButtons=(\n      <ul className=\"navbar-nav ml-auto\">\n      <li className=\"nav-item\">\n        <NavLink className=\"nav-link\" to=\"/dashboard\">\n          <i  className=\"fas fa-user-circle mr-1\" />\n          {name}\n        </NavLink>\n      </li>\n      <li className=\"nav-item\">\n        <NavLink className=\"nav-link\" to=\"/\" onClick={pressedForLogOut}>\n          Logout\n        </NavLink>\n      </li>\n    </ul>\n    )\n   }\n    return(\n\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\n        <div className=\"container\">\n          <a className=\"navbar-brand\" href=\"/Dashboard.html\">\n            Personal Project Management Tool\n          </a>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#mobile-nav\"\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n\n          <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n            <ul className=\"navbar-nav mr-auto\">\n              <li className=\"nav-item\">\n                <NavLink className=\"nav-link\" to=\"/dashboard\">\n                  Dashboard\n                </NavLink>\n              </li>\n            </ul>\n            {singButtons}\n          </div>\n        </div>\n      </nav>\n    );\n}\n\n\nconst maptostate=state=>{\n  return{\n    decodedToken:state.auth.token\n  }\n}\n\nconst maptoprops=dispatch=>{\n  return{\n    logout:()=>dispatch(logOut())\n  }\n}\n\nexport default withRouter(connect(maptostate,maptoprops)(Header));","import React  from 'react';\nimport './App.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {BrowserRouter, Switch, Route, HashRouter }  from 'react-router-dom'\nimport Landing from './component/layout/Landing';\nimport Register from './component/layout/UserManagment/Register';\nimport Login from './component/layout/UserManagment/Login';\nimport All from './AllExceptMain'\nimport jwt_decode from 'jwt-decode'\nimport { connect } from 'react-redux';\nimport { sendTokenToReducer, logOut } from './action';\nimport setJwtToken from './SetJwtToken';\nimport Header from \"./component/layout/header\"\n\n\nlet token=localStorage.getItem('jwt')\nif(token){\n  let decoded=jwt_decode(token)\n  let current= Date.now()/1000\n  if(decoded.exp<current){\n    logOut()\n    window.location.href='/'\n  }else{\n    sendTokenToReducer(decoded)\n    setJwtToken(token)\n  }\n}\n\nfunction App(props) {\n  return (\n    <div className=\"App\">\n    <Header />\n    <Switch>\n      <Route exact path='/' component={Landing}/>\n      <Route exact path='/register' component={Register}/>\n      <Route exact path='/login' component={Login}/>\n\n    </Switch>\n    <All/>\n   \n    </div>\n\n\n  );\n}\n\nconst maptoprops=dispatch=>{\n  return{\n    logingIn:(token)=>dispatch(sendTokenToReducer(token)),\n    logout:()=>dispatch(logOut)\n  }\n}\n\nexport default connect(null,maptoprops)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import '../action'\nconst initialreducer={\n    error:false,\n    projects:[]\n}\n\n\n\nconst reducer=(state=initialreducer,action)=>{\n    if(action.type===\"response\"){\n        \n        return{\n            ...state,\n            error:true\n        }\n\n    }\n    if(action.type==='projects'){\n        return{\n            ...state,\n            projects:action.projects\n        }\n    }\n    return reducer\n}\n\nexport default reducer\n\n","import '../action'\n\n\nconst initialState={\n    projectTasks:null,\n    projectTask:null,\n    error:false,\n}\n\n\nconst reducer=(state=initialState, action)=>{\n\n    if(action.type==='tasks'){\n        return{\n            ...state,\n            projectTasks:action.tasks\n        }\n    }\n\n    if(action.type==='error'){\n        return{\n            ...state,\n            error:true\n        }\n    }\n    return state\n}\n\n\nexport default reducer","import '../action'\n\nconst initialstate={\n    token:null,\n    error:null\n    \n}\n\n\n\n\nconst reducer=(state=initialstate,action)=>{\n\n    if(action.type==='errorForAuth'){\n        return{\n            ...state,\n            error:action.resp\n        }\n    }\n\n    if(action.type===\"tokenRecieved\"){\n        return{\n            ...state,\n            token:action.token,\n            error:false\n        }\n    }\n\n    if(action.type===\"logout\"){\n        return{\n            ...state,\n            token:null,\n            error:null\n        }\n    }\n\n    return state\n\n}\n\n\nexport default reducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, compose, applyMiddleware, combineReducers } from \"redux\"\nimport {Provider} from 'react-redux'\nimport thunk  from 'redux-thunk'\nimport reducer from './Reducers/reducer1'\nimport backlog from './Reducers/backlogReducer'\nimport Auth from './Reducers/Authorization'\nimport { HashRouter } from 'react-router-dom';\n\n\nconst rootreducer=combineReducers({\n  reducer:reducer,\n  backlog:backlog,\n  auth:Auth\n})\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(rootreducer, composeEnhancers(applyMiddleware(thunk)))\nReactDOM.render((\n  <HashRouter>\n  <Provider store={store}>\n      <App />\n  </Provider>\n  </HashRouter>),\n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}